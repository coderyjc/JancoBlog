<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jancoyan.jancoblog.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.jancoyan.jancoblog.pojo.Article">
        <id column="article_id" property="articleId" />
        <result column="article_title" property="articleTitle" />
        <result column="article_author" property="articleAuthor" />
        <result column="article_type" property="articleType" />
        <result column="article_summary" property="articleSummary" />
        <result column="article_html" property="articleHtml" />
        <result column="article_md" property="articleMd" />
        <result column="article_is_comment" property="articleIsComment" />
        <result column="article_rank" property="articleRank" />
        <result column="article_post_time" property="articlePostTime" />
        <result column="article_edit_time" property="articleEditTime" />
        <result column="article_view_count" property="articleViewCount" />
        <result column="article_comment_count" property="articleCommentCount" />
        <result column="article_like_count" property="articleLikeCount" />
        <result column="user_name" property="userName" />
        <result column="type_name" property="typeName"/>
    </resultMap>
    <sql id="Base_Column_List">
        article_id, article_title, article_author, article_type, article_summary, article_html, article_md, article_is_comment, article_rank, article_post_time, article_edit_time, article_view_count, article_comment_count, article_like_count
    </sql>
    <select id="getIndexList" resultType="com.jancoyan.jancoblog.pojo.Article">
        select * from v_article_list_show ${ew.customSqlSegment}
    </select>
    <select id="getManageList" resultType="com.jancoyan.jancoblog.pojo.Article">
        select * from v_article_manage_list ${ew.customSqlSegment}
    </select>
    <select id="getSingleArticle" resultType="com.jancoyan.jancoblog.pojo.Article">
        select * from v_article_get_single where article_id = '${id}'
    </select>
    <select id="getSingleArticleDeleted" resultType="com.jancoyan.jancoblog.pojo.Article">
        select * from v_article_get_single_deleted where article_id = '${id}'
    </select>
    <select id="getDeletedList" resultType="com.jancoyan.jancoblog.pojo.Article">
        select * from v_article_deleted_list ${ew.customSqlSegment}
    </select>
    <delete id="deleteCompletely">
        delete from tbl_deleted_article where article_id = '${articleId}'
    </delete>
    <select id="batchRecover">
        CALL proc_recover_article(${articleId});
    </select>
    <select id="getArticleByUserRecently"
            resultType="com.jancoyan.jancoblog.pojo.PageArticle">
        select * from v_page_article ${ew.customSqlSegment}
    </select>
    <select id="getArticleEdit" resultType="com.jancoyan.jancoblog.pojo.Article">
        select article_id,
               article_title,
               article_summary,
               article_md,
               article_type,
               article_is_comment
               from tbl_article where article_id = '${id}'
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jancoyan.jancoblog.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="com.jancoyan.jancoblog.pojo.Comment">
        <id column="comment_id" property="commentId" />
        <result column="pre_comment_id" property="preCommentId" />
        <result column="comment_article_id" property="commentArticleId" />
        <result column="comment_author_id" property="commentAuthorId" />
        <result column="comment_author_name" property="commentAuthorName" />
        <result column="comment_author_email" property="commentAuthorEmail" />
        <result column="comment_content" property="commentContent" />
        <result column="comment_date" property="commentDate" />
        <result column="comment_author_ip" property="commentAuthorIp" />
        <result column="comment_like_count" property="commentLikeCount" />
        <result column="article_title" property="articleTitle" />
    </resultMap>
    <sql id="Base_Column_List">
        comment_id, pre_comment_id, comment_article_id, comment_author_id, comment_author_name, comment_author_email, comment_content, comment_date, comment_author_ip, comment_like_count
    </sql>
    <update id="recoverComment">
        CALL proc_recover_comment(${commentId});
    </update>
    <delete id="deleteComment">
        CALL proc_transfer_comment(${commentId});
    </delete>
    <select id="getAll" resultType="com.jancoyan.jancoblog.pojo.Comment">
        select * from v_comment_manage_list ${ew.customSqlSegment}
    </select>
    <select id="getCommentByArticle" resultType="com.jancoyan.jancoblog.pojo.Comment">
        select * from v_comment_article ${ew.customSqlSegment}
    </select>
    <select id="getCommentByUserPosted" resultType="com.jancoyan.jancoblog.pojo.Comment">
        select * from v_comment_manage_list ${ew.customSqlSegment}
    </select>
    <resultMap id="PageComment" type="com.jancoyan.jancoblog.pojo.PageComment">
        <result column="comment_author_name" property="commentAuthorName" />
        <result column="article_id" property="articleId" />
        <result column="article_author" property="articleAuthor" />
        <result column="article_title" property="articleTitle" />
        <result column="comment_date" property="commentDate" />
    </resultMap>
    <sql id="Page_Comment">
        comment_author_name, article_id, article_author, article_title, comment_date
    </sql>
    <select id="getCommentByUserRecently"
            resultType="com.jancoyan.jancoblog.pojo.PageComment">
        select <include refid="Page_Comment" />
            from v_page_comment ${ew.customSqlSegment}
    </select>
</mapper>
	 <?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jancoyan.jancoblog.mapper.DeletedCommentMapper">
    <resultMap id="BaseResultMap" type="com.jancoyan.jancoblog.pojo.DeletedComment">
        <id column="comment_id" property="commentId" />
        <result column="pre_comment_id" property="preCommentId" />
        <result column="comment_article_id" property="commentArticleId" />
        <result column="comment_author_id" property="commentAuthorId" />
        <result column="comment_author_name" property="commentAuthorName" />
        <result column="comment_author_email" property="commentAuthorEmail" />
        <result column="comment_content" property="commentContent" />
        <result column="comment_date" property="commentDate" />
        <result column="comment_author_ip" property="commentAuthorIp" />
        <result column="comment_like_count" property="commentLikeCount" />
    </resultMap>
    <sql id="Base_Column_List">
        comment_id, pre_comment_id, comment_article_id, comment_author_id, comment_author_name, comment_author_email, comment_content, comment_date, comment_author_ip, comment_like_count
    </sql>
    <select id="getCommentByArticle"
            resultType="com.jancoyan.jancoblog.pojo.DeletedComment">
        select * from  v_comment_article_deleted ${ew.customSqlSegment}
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jancoyan.jancoblog.mapper.LikeRecordMapper">
    <resultMap id="BaseResultMap" type="com.jancoyan.jancoblog.pojo.LikeRecord">
        <id column="like_id" property="likeId" />
        <result column="article_id" property="articleId" />
        <result column="author_id" property="authorId" />
        <result column="like_date" property="likeDate" />
        <result column="user_name" property="userName" />
        <result column="article_title" property="articleTitle" />
        <result column="article_author" property="articleAuthor" />
    </resultMap>
    <sql id="Base_Column_List">
        like_id, article_id, author_id, like_date,
    </sql>
    <sql id="Column_List">
        article_id, article_author, article_title, like_date, user_name
    </sql>
    <select id="getUserReceive" resultType="com.jancoyan.jancoblog.pojo.LikeRecord">
        select <include refid="Column_List" />
        from  v_page_like ${ew.customSqlSegment}
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jancoyan.jancoblog.mapper.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.jancoyan.jancoblog.pojo.UserInfo">
        <id column="user_id" property="userId" />
        <result column="user_email" property="userEmail" />
        <result column="user_sex" property="userSex" />
        <result column="user_region" property="userRegion" />
        <result column="user_birthdate" property="userBirthdate" />
        <result column="user_telephone" property="userTelephone" />
        <result column="user_real_name" property="userRealName" />
        <result column="user_school" property="userSchool" />
        <result column="user_major" property="userMajor" />
        <result column="user_enter_school_date" property="userEnterSchoolDate" />
        <result column="user_academic_degree" property="userAcademicDegree" />
        <result column="user_company" property="userCompany" />
        <result column="user_position" property="userPosition" />
        <result column="user_field" property="userField" />
    </resultMap>
    <sql id="Base_Column_List">
        user_id, user_email, user_sex, user_region, user_birthdate, user_telephone, user_real_name, user_school, user_major, user_enter_school_date, user_academic_degree, user_company, user_position, user_field
    </sql>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jancoyan.jancoblog.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.jancoyan.jancoblog.pojo.User">
        <id column="user_id" property="userId" />
        <result column="user_name" property="userName" />
        <result column="user_password" property="userPassword" />
        <result column="user_signature" property="userSignature" />
        <result column="user_role" property="userRole" />
        <result column="user_create_date" property="userCreateDate" />
        <result column="user_last_login_date" property="userLastLoginDate" />
        <result column="user_ip" property="userIp" />
    </resultMap>
    <sql id="Base_Column_List">
        user_id, user_name, user_signature, user_password, user_role, user_create_date,
        user_last_login_date, user_ip
    </sql>
    <select id="getAll" resultType="com.jancoyan.jancoblog.pojo.User">
        select * from v_user_manage_show ${ew.customSqlSegment}
    </select>
    <resultMap id="UserTotalData" type="com.jancoyan.jancoblog.pojo.VUserTotalData">
        <result column="article_author" property="articleAuthor" />
        <result column="user_name" property="userName" />
        <result column="user_signature" property="userSignature" />
        <result column="total_article" property="totalArticle" />
        <result column="total_view_count" property="totalViewCount" />
        <result column="total_like_count" property="totalLikeCount" />
        <result column="total_comment_count" property="totalCommentCount"/>
    </resultMap>
    <sql id="User_Total_Data_List">
        article_author, user_name, user_signature, total_article, total_view_count,
        total_like_count, total_comment_count
    </sql>
    <select id="getUserTotalData" resultType="com.jancoyan.jancoblog.pojo.VUserTotalData">
        select * from v_user_total_data where article_author = ${userId};
    </select>
    <resultMap id="UserInfoMap" type="com.jancoyan.jancoblog.pojo.UserInfo">
        <id column="user_id" property="userId" />
        <result column="user_email" property="userEmail" />
        <result column="user_sex" property="userSex" />
        <result column="user_region" property="userRegion"/>
        <result column="user_birthday" property="userBirthdate" />
        <result column="user_telephone" property="userTelephone" />
        <result column="user_real_name" property="userRealName" />
        <result column="user_school" property="userSchool" />
        <result column="user_major" property="userMajor"/>
        <result column="user_enter_school_date" property="userEnterSchoolDate"/>
        <result column="user_academic_degree" property="userAcademicDegree"/>
        <result column="user_company" property="userCompany"/>
        <result column="user_position" property="userPosition"/>
        <result column="user_field" property="userField"/>
    </resultMap>
    <sql id="User_Info_List">
        user_id, user_email, user_sex, user_region, user_birthdate,
        user_telephone, user_real_name, user_school, user_major,
        user_enter_school_date, user_academic_degree, user_company, user_position, user_field
    </sql>
    <select id="getUserInfo" resultType="com.jancoyan.jancoblog.pojo.UserInfo">
        select * from tbl_user_info where user_id = ${userId}
    </select>
    <select id="login" resultType="com.jancoyan.jancoblog.pojo.User">
        select user_id, user_name, user_signature, role_name
        from v_login
        where user_name = '${username}' and user_password = '${password}';
    </select>
</mapper>